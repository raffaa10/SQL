-- a. Listez les articles dans l’ordre alphabétique des désignations

SELECT designation FROM t_article
ORDER BY designation ASC

-- b. Listez les articles dans l’ordre des prix du plus élevé au moins elevé

SELECT A.designation, A.prix FROM t_article AS A
GROUP BY A.prix DESC

-- c. Listez les articles dont le prix est supérieur à 25€

SELECT A.designation, A.prix FROM t_article AS A
WHERE A.prix > 25
ORDER BY A.prix

-- d. Listez tous les articles qui sont des « boulons » et triez les résultats par ordre de prix ascendant

SELECT A.designation, A.prix FROM t_article AS A 
WHERE A.designation LIKE '%Boulon%'
ORDER BY A.prix ASC

-- e. Listez tous les articles dont la désignation contient le mot « sachet ».

SELECT designation FROM t_article
WHERE designation LIKE '%sachet%'

-- f. Listez tous les articles dont la désignation contient le mot « sachet » indépendamment de la casse !

SELECT Designation, Prix FROM t_article
WHERE lower(Designation) LIKE '%sachet%'

-- g. Listez les articles avec les informations fournisseur correspondantes. Les résultats
-- doivent être triées dans l’ordre alphabétique des fournisseurs et par article du prix le
-- plus élevé au moins élevé.

SELECT A.designation, F.nom, A.prix
FROM t_article AS A INNER JOIN t_fournisseur AS F ON A.id_fou = F.id
GROUP BY F.nom ASC, A.prix DESC

-- h. Listez les articles de la société « Dubois & Fils »

SELECT t_article.designation, t_fournisseur.nom FROM t_article, t_fournisseur
WHERE t_fournisseur.id = t_article.id_fou AND t_fournisseur.nom LIKE '%Dubois & Fils%'

-- i. Calculez la moyenne des prix des articles de la société « Dubois & Fils »

SELECT t_fournisseur.Nom, AVG(t_article.PRIX)
FROM t_article, t_fournisseur
WHERE t_fournisseur.ID=t_article.ID_Fou AND t_fournisseur.Nom LIKE '%Dubois & Fils%'

2eme option

SELECT t_fournisseur.Nom, AVG(t_article.PRIX)
FROM t_fournisseur INNER JOIN t_article ON 
t_fournisseur.ID=t_article.ID_Fou WHERE t_fournisseur.id = 3
Group BY t_fournisseur.nom

-- j. Calculez la moyenne des prix des articles de chaque fournisseur

SELECT t_fournisseur.Nom, AVG(t_article.PRIX)
FROM t_fournisseur INNER JOIN t_article ON 
t_fournisseur.ID=t_article.ID_Fou
Group BY t_fournisseur.nom

-- k. Sélectionnez tous les bons de commandes émis 
-- entre le 01/03/2019 et le 05/04/2019 à 12h00. 

SELECT * FROM t_bon
WHERE t_bon.date_cmde > '2019-03-01%' and t_bon.date_cmde < '2019-04-05 12:00'


-- l. Sélectionnez les divers bons de commande qui contiennent des boulons

SELECT * FROM t_bon, t_compo, t_article
WHERE t_compo.id_bon = t_bon.id AND t_compo.id_art = t_article.id AND t_article.designation LIKE '%boulon%'


-- m. Sélectionnez les divers bons de commande qui contiennent des boulons avec le nom
-- du fournisseur associé.

SELECT t_article.Designation, t_fournisseur.Nom, t_bon.* FROM t_bon, t_article, t_compo, t_fournisseur
WHERE t_compo.id_bon = t_bon.id AND t_compo.id_art = t_article.id AND t_article.id_fou = t_fournisseur.id
AND t_article.designation LIKE '%boulon%'


-- n. Calculez le prix total de chaque bon de commande
-- ????? ça marche pas avec INNER JOIN
Select t_bon.id, t_article.id, t_bon*, SUM(t_article.prix * t_compo.qte) FROM t_bon, t_article, t_compo 
INNER JOIN t_compo ON t_article.id = t_compo.id_art 
INNER JOIN t_compo ON t_bon.id = t_compo.id_bon
GROUP BY t_bon.numero

SELECT t_bon.numero, SUM(t_article.prix * t_compo.qte) FROM t_bon, t_article, t_compo 
WHERE t_compo.id_bon=t_bon.id AND t_compo.id_art=t_article.id 
GROUP BY t_bon.Numero

-- o. Comptez le nombre d’articles de chaque bon de commande

SELECT t_bon.numero, SUM(t_compo.qte) as somme from t_bon, t_compo
WHERE t_compo.id_bon=t_bon.id
GROUP BY t_bon.numero

-- p. Affichez les numéros de bons de commande qui contiennent plus de 25 articles et
-- affichez le nombre d’articles de chacun de ces bons de commande

SELECT t_bon.numero, SUM(t_compo.qte) as qte_Totale FROM t_bon, t_article, t_compo
WHERE t_compo.id_bon = t_bon.id AND t_compo.id_art = t_article.id
GROUP BY t_bon.numero Having qte_Totale > 25



-- q. Calculez le coût total des commandes effectuées sur le mois --d’avril

SELECT SUM(A.prix * C.qte) AS COUNT FROM t_bon AS B 
INNER JOIN t_compo AS C ON B.id = C.id_art
INNER JOIN t_article AS A on A.id = C.id_art
WHERE Month(B.date_cmde) = 4; 

4) Requêtes plus difficiles
a. Sélectionnez les articles qui ont une désignation identique mais des fournisseurs
différents (indice : réaliser une auto jointure i.e. de la table avec elle-même)
b. Calculez les dépenses en commandes mois par mois (indice : utilisation des fonctions
MONTH et YEAR)
c. Sélectionnez les bons de commandes sans article (indice : utilisation de EXISTS)
d. Calculez le prix moyen des bons de commande par fournisseur.
